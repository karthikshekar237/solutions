AWSTemplateFormatVersion: '2010-09-09'
Description: Trigger SNS notification on SSM Parameter Store update

Resources:
  SNSNotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: 'SSMParameterUpdateTopic'

  SNSLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'SNSPublishPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'sns:Publish'
                Resource: '*'

  SNSLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: 'index.lambda_handler'
      Role: !GetAtt SNSLambdaRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3

          sns_client = boto3.client('sns')

          def lambda_handler(event, context):
              detail = event['detail']
              parameter_name = detail['requestParameters']['name']
              parameter_value = detail['requestParameters']['value']

              message = f"Parameter Store value updated:\nName: {parameter_name}\nNew Value: {parameter_value}"

              response = sns_client.publish(
                  TopicArn=event['Resources'][0],
                  Message=message,
                  Subject='SSM Parameter Store Update Notification'
              )

              return {
                  'statusCode': 200,
                  'body': json.dumps('Notification sent successfully!')
              }
      Runtime: 'python3.9'
      Timeout: 30

  EventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - "aws.ssm"
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - "ssm.amazonaws.com"
          eventName:
            - "PutParameter"
          requestParameters:
            name:
              - "SOE_Image"
      State: 'ENABLED'
      Targets:
        - Arn: !GetAtt SNSLambdaFunction.Arn
          Id: 'SNSLambdaFunction'

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref SNSLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt EventRule.Arn

Outputs:
  SNSTopicArn:
    Description: 'SNS Topic ARN'
    Value: !Ref SNSNotificationTopic
  LambdaFunctionName:
    Description: 'Lambda Function Name'
    Value: !Ref SNSLambdaFunction

